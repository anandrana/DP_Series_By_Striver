 
import java.util.*;

public class Solution {

    public static int stockProfitUtil(int[] prices,int index,int buy,int[][] dp){
        if(index>=prices.length){
            return 0;
        }
        if(dp[index][buy]!=-1){
            return dp[index][buy];
        }
        if(buy==1){
            return dp[index][buy]= Math.max(stockProfitUtil(prices,index+1,1,dp),
                           -prices[index]+stockProfitUtil(prices,index+1,0,dp));
        }else{
            return dp[index][buy]=Math.max(stockProfitUtil(prices,index+1,0,dp),
                           prices[index]+stockProfitUtil(prices,index+2,1,dp));
        }
    }
	public static int stockProfit(int[] prices) {
		// Write your code here.
       int[][] dp=new int[prices.length+1][2];
        for(int i=0;i<=prices.length;i++){
            Arrays.fill(dp[i],-1);
        }
        return stockProfitUtil(prices,0,1,dp);
	}
}
