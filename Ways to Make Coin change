import java.util.*;

public class Solution {

    public static long countChange(int index,int[] denominations,int value,long[][] dp){
        if(index==0){
            if(value%denominations[index]==0)
                return 1;
            return 0;
        }
        if(dp[index][value]!=-1){
            return dp[index][value];
        }
        long notTake=countChange(index-1,denominations,value,dp);
        long take=0;
        if(denominations[index]<=value){
            take=countChange(index,denominations,value-denominations[index],dp);
        }
        dp[index][value]=take+notTake;
        return dp[index][value];
    }
	public static long countWaysToMakeChange(int denominations[], int value){
        //write your code here	
        int n=denominations.length;
        
        long[][] dp=new long[n][value+1];
        for(int i=0;i<n;i++){
            Arrays.fill(dp[i],-1);
        }
        return countChange(n-1,denominations,value,dp);
	}
	
}
