from sys import stdin, stdout, setrecursionlimit

setrecursionlimit(10 ** 7)

def minSubsetSumDifference(arr, n):
    # Write your code here.
    # Return the minimum difference in the form of an integer.
    target=sum(arr)
    dp=[[False for i in range(target+1)]for i in range(n)]
    
    for i in range(n):
        dp[i][0]=True
    
    if(arr[0]<=target):
        dp[0][arr[0]]=True
    
    for i in range(1,n):
        for j in range(1,target+1):
            notTaken=dp[i-1][j]
            taken=False
            if(arr[i]<=j):
                taken=dp[i-1][j-arr[i]]
            dp[i][j]=taken or notTaken
    ans=1e9;
    for i in range(target+1):
        if(dp[n-1][i]==True):
            ans=min(ans,abs(i-(target-i)));
    return ans;


# Taking input using fast I/0.
def takeInput():
    N = int(stdin.readline())
    arr = list(map(int, stdin.readline().strip().split(" ")))
    return N, arr


tc = int(input())
while tc > 0:
    N, arr = takeInput()
    ans = minSubsetSumDifference(arr, N)
    stdout.write(str(ans) + "\n")
    tc -= 1
