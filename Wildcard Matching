import java.util.*;

public class Solution {
    public static int match(String pattern,String text,int p,int t,int[][] dp){
        if(t<0 && p<0){
            return 1;
        }
        if(p<0 && t>=0){
            return 0;
        }
        if(t<0 && p>=0){
            int flag=0;
            for(int i=0;i<=p;i++){
                if(pattern.charAt(i)!='*'){
                    flag=1;
                    break;
                }
            }
            if(flag==1){
                return 0;
            }
            return 1;
        }
        if(dp[p][t]!=-1)
            return dp[p][t];
        
       if(pattern.charAt(p)==text.charAt(t) || pattern.charAt(p)=='?'){
                return dp[p][t]=match(pattern,text,p-1,t-1,dp);
        }
        if(pattern.charAt(p)=='*')
            return dp[p][t]=(match(pattern,text,p-1,t,dp)==1 || match(pattern,text,p,t-1,dp)==1)?1:0;
        
        return 0;
        
        
    }
	public static boolean wildcardMatching(String pattern, String text) {
		// Write your code here.
        
        int p=pattern.length();
        int t=text.length();
        int[][] dp=new int[p][t];
        for(int i=0;i<p;i++){
            Arrays.fill(dp[i],-1);
        }
        if(match(pattern,text,p-1,t-1,dp)==1)
            return true;
        return false;
	}
}
