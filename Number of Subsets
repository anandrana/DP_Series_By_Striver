from typing import List

def findWaysToTar(num,tar,index,dp):

    if(index==0):
        if(tar==0 and num[index]==0):
            return 2
        
        if(tar==0 or tar==num[0]):
            return 1
        return 0
    if(dp[index][tar]!=-1):
        return dp[index][tar]
    
    notPick=findWaysToTar(num,tar,index-1,dp)
    pick=0
    if(num[index]<=tar):
        pick=findWaysToTar(num,tar-num[index],index-1,dp)
    dp[index][tar]=notPick+pick
    return dp[index][tar]
def findWays(num: List[int], tar: int) -> int:
    # Write your code here.
    if(len(num)==0):
        return 0
    dp=[[-1 for i in range(tar+1)]for i in range(len(num))]
    
    return findWaysToTar(num,tar,len(num)-1,dp)
    
