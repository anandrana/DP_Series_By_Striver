import java.util.*;

public class Solution {
    public static boolean compareString(String s1,String s2){
        if(s1.length()!=s2.length()+1){
            return false;
        }
        
        int first=0;
        int second=0;
        
        while(first<s1.length()){
            if( second < s2.length() && s1.charAt(first)==s2.charAt(second)){
                first++;
                second++;
            }else{
                first++;
            }
        }
        if(first==s1.length() && second==s2.length()){
            return true;
        }return false;
    }
	public static int longestStrChain(int n, String[] arr) {
		// Write your code here.
        Arrays.sort(arr,(a,b)->Integer.compare(a.length(),b.length()));
        
//         for(int i=0;i<n;i++){
//             System.out.println(arr[i]);
//         }
        int[] dp=new int[n];
        Arrays.fill(dp,1);
        for(int i=1;i<n;i++){
            for(int j=0;j<i;j++){
                if(compareString(arr[i],arr[j]) && dp[i]<dp[j]+1){
                    dp[i]=1+dp[j];
                }
            }
        }
        int Maxi=0;
        for(int i=0;i<n;i++){
            Maxi=Math.max(dp[i],Maxi);
        }return Maxi;
	}
}
