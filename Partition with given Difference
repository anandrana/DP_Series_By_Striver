from typing import List

def countPartitionsUtil(index,dp,target,arr):
    if(index==0):
        if(target==0 and arr[index]==0):
            return 2
        if(target==arr[index] or target==0):
            return 1
        return 0
    if(dp[index][target]!=-1):
        return dp[index][target]
    notTaken=countPartitionsUtil(index-1,dp,target,arr)
    taken=0
    if(arr[index]<=target):
        taken=countPartitionsUtil(index-1,dp,target-arr[index],arr)
    dp[index][target]=notTaken+taken
    return dp[index][target]

def countPartitions(n: int, d: int, arr: List[int]) -> int:
    # write your code here
    total=sum(arr)
    if(total-d<0 or (total-d)%2 !=0):
        return 0
    target=(total-d)//2
    
    dp=[[-1 for i in range(target+1)]for i in range(n)]
    return countPartitionsUtil(len(arr)-1,dp,target,arr)%1000000007
    
