import java.util.*;

public class Solution {
//     public static int matrixChainMultiplication(int[] arr,int i,int j,int[][] dp){
//         if(i==j){
//             return 0;
//         }
//         if(dp[i][j]!=-1){
//             return dp[i][j];
//         }
//         int mini=Integer.MAX_VALUE;
//         for(int k=i;k<j;k++){
//             int steps=arr[i-1]*arr[k]*arr[j]+matrixChainMultiplication(arr,i,k,dp)+matrixChainMultiplication(arr,k+1,j,dp);
            
//             mini=Math.min(steps,mini);
//         }
//         dp[i][j]=mini;
//         return mini;
//     }
	public static int matrixMultiplication(int[] arr , int N) {
		// Write your code here
        
        int[][] dp=new int[N][N];
        for(int i=1;i<N;i++){
            dp[i][i]=0;
        }
//         return matrixChainMultiplication(arr,1,N-1,dp);
        
        for(int i=N-1;i>=1;i--){
            for(int j=i+1;j<N;j++){
                int mini=Integer.MAX_VALUE;
                for(int k=i;k<j;k++){
                    int steps=arr[i-1]*arr[k]*arr[j]
                        +dp[i][k]
                        +dp[k+1][j];
                    mini=Math.min(steps,mini);
                }
                dp[i][j]=mini;              
            }
        }
        return dp[1][N-1];
	}
}
